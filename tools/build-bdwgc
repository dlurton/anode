#!/bin/bash -e

SCRIPT_DIR=$(dirname $(readlink -f ${0}))
PROJECT_ROOT_DIR=`readlink -f $SCRIPT_DIR/..`
source $SCRIPT_DIR/util.sh

travis_fold start bdwgc-build

EXTERNS_DIR=$PROJECT_ROOT_DIR/externs
INSTALL_DIR=$EXTERNS_DIR/${ANODE_BUILD_TYPE,,}/bdwgc/usr/local/lib
SCRATCH_DIR=$EXTERNS_DIR/scratch
SRC_DIR=$SCRATCH_DIR/bdwgc
BRANCH=release-7_6

say "Variables:"
echo "CC                " $CC
echo "CXX               " $CXX
echo "PROJECT_ROOT_DIR  " $PROJECT_ROOT_DIR
echo "EXTERNS_DIR       " $EXTERNS_DIR
echo "INSTALL_DIR       " $INSTALL_DIR
echo "SCRATCH_DIR       " $SCRATCH_DIR
echo "SRC_DIR           " $SRC_DIR
echo "BRANCH            " $BRANCH
#read -p "Press enter to continue"

mkdir -p $SCRATCH_DIR

cd $SCRATCH_DIR

say "Cloning or pulling github bdwgc"
if [ ! -d $SRC_DIR ]; then 
    git clone git://github.com/ivmai/bdwgc.git
    cd $SRC_DIR
else
    cd $SRC_DIR
    git pull origin $BRANCH
fi

say "Switching to  branch"
git checkout $BRANCH


say "Running autoreconf -vif"
autoreconf -vif
say "Running automake --add-missing"
automake --add-missing
say "Running configure"

if [ "$ANODE_BUILD_TYPE" -ne "Release" ]; then
    SHOULD_DEBUG="--enable-gc-debug"
fi

# http://www.hboehm.info/gc/simple_example.html
./configure --prefix=$INSTALL_DIR --enable-cplusplus $SHOULD_DEBUG

say "Running make clean"
# this seems silly, but doing a make clean here will prevent a problem related to installing to a non-standard path prefix
# https://stackoverflow.com/questions/10279829/installing-glib-in-non-standard-prefix-fails
make clean

say "Running make"
make

say "Running make check -j"
make check -j

say "Running make install"
make install

say "bdwgc built and installed successfully at" $INSTALL_DIR

travis_fold end bdwgc-build